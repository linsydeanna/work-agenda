var _user$project$Main$columnHeader = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Main$editTask = F3(
	function (tasks, id, taskName) {
		return A2(
			_elm_lang$core$List$map,
			function (task) {
				return _elm_lang$core$Native_Utils.eq(task.id, id) ? _elm_lang$core$Native_Utils.update(
					task,
					{name: taskName}) : task;
			},
			tasks);
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'TaskInput') {
			var newTasks = A3(_user$project$Main$editTask, model.tasks, _p0._0, _p0._1);
			return _elm_lang$core$Native_Utils.update(
				model,
				{tasks: newTasks});
		} else {
			return model;
		}
	});
var _user$project$Main$emptyTask = {name: '', id: 0, duration: _elm_lang$core$Maybe$Nothing, startTime: _elm_lang$core$Maybe$Nothing, endTime: _elm_lang$core$Maybe$Nothing};
var _user$project$Main$initialModel = {
	tasks: {
		ctor: '::',
		_0: _user$project$Main$emptyTask,
		_1: {ctor: '[]'}
	},
	workStartTime: _elm_lang$core$Maybe$Nothing
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {tasks: a, workStartTime: b};
	});
var _user$project$Main$Task = F5(
	function (a, b, c, d, e) {
		return {name: a, id: b, duration: c, startTime: d, endTime: e};
	});
var _user$project$Main$AddStart = function (a) {
	return {ctor: 'AddStart', _0: a};
};
var _user$project$Main$TimeInput = function (a) {
	return {ctor: 'TimeInput', _0: a};
};
var _user$project$Main$DurationInput = function (a) {
	return {ctor: 'DurationInput', _0: a};
};
var _user$project$Main$TaskInput = F2(
	function (a, b) {
		return {ctor: 'TaskInput', _0: a, _1: b};
	});
var _user$project$Main$taskRow = function (task) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(
						_user$project$Main$TaskInput(task.id)),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{ctor: '[]'},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Work Agenda'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					A2(_elm_lang$core$List$map, _user$project$Main$taskRow, model.tasks)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$initialModel, update: _user$project$Main$update, view: _user$project$Main$view})();
var _user$project$Main$AddTask = {ctor: 'AddTask'};
